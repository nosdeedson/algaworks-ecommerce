<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd"
             version="2.2">
    <persistence-unit name="Ecommerce-PU">
<!--     	<validation-mode>CALLBACK</validation-mode> -->
			<shared-cache-mode>ALL</shared-cache-mode>
        <properties>
            <property name="javax.persistence.jdbc.url"
                      value="jdbc:postgresql://localhost/algaworks_ecommerce?createDatabaseIfNotExist=true&amp;useTimezone=true&amp;serverTimezone=UTC" />
            <property name="javax.persistence.jdbc.user" value="postgres" />
            <property name="javax.persistence.jdbc.password" value="root" />
            <property name="javax.persistence.jdbc.driver" value="org.postgresql.Driver" />
            
            <property name="hibernate.hikari.maximumPoolSize" value="8" />
            <property name="hibernate.connection.provider_class"
                      value="org.hibernate.hikaricp.internal.HikariCPConnectionProvider" />
                      
<!--             <property name="hibernate.cache.region.factory_class" -->
<!--                       value="org.hibernate.cache.jcache.internal.JCacheRegionFactory"/> -->
<!--             <property name="hibernate.javax.cache.provider" -->
<!--                       value="org.ehcache.jsr107.EhcacheCachingProvider"/> -->
<!--             <property name="hibernate.javax.cache.uri" value="META-INF/ehcache.xml"/> -->
                      
<!--             <property name="javax.persistence.sharedCache.mode" value="ALL"/> -->
            
<!--             <property name="hibernate.connection.autocommit" value="true" /> -->

<!-- 			permite deletar o banco de dados e recria-lo -->
<!-- 			<property name="javax.persistence.schema-generation.database.action" value="drop-and-create"/> -->
			
<!-- 			faz com que o banco não seja recriado -->
			<property name="javax.pesistence.schema-generation.database.action" value="none"/>

<!--            faz com que o JPA use os metadados das classes depois os scripts existentes -->
            <property name="javax.persistence.schema-generation.create-source" value="metadata-then-script"/>
            
<!--          faz com que o JPA use os metadados das classes depois o scripts  existentes-->
            <property name="javax.persistence.schema-generation.drop-source" value="metadata-then-script"/>
            
<!--             faz com que o JPA use o script de criação  -->
            <property name="javax.persistence.schema-generation.create-script-source" value="META-INF/banco-de-dados/script-criacao.sql"/>
            
<!--             faz com que o JPA use o script de remoção -->
            <property name="javax.persistence.schema-generation.drop-script-source" value="META-INF/banco-de-dados/script-remocao.sql"/>
            
            <property name="javax.persistence.sql-load-script-source" value="META-INF/banco-de-dados/dados-iniciais.sql"/>

            <property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect" />

            <property name="hibernate.show_sql" value="true" />
            <property name="hibernate.format_sql" value="false" />
        </properties>
    </persistence-unit>
</persistence>